diff --git a/node_modules/@parcel/transformer-postcss/lib/PostCSSTransformer.js b/node_modules/@parcel/transformer-postcss/lib/PostCSSTransformer.js
index 4792915..5149bd0 100644
--- a/node_modules/@parcel/transformer-postcss/lib/PostCSSTransformer.js
+++ b/node_modules/@parcel/transformer-postcss/lib/PostCSSTransformer.js
@@ -139,10 +139,10 @@ var _default = new (_plugin().Transformer)({
     const postcss = await loadPostcss(options, asset.filePath);
     return {
       type: 'postcss',
-      version: '8.2.1',
+      version: '7.0.0',
       program: postcss.parse(await asset.getCode(), {
         from: asset.filePath
-      }).toJSON()
+      })
     };
   },
 
@@ -172,7 +172,7 @@ var _default = new (_plugin().Transformer)({
 
     const postcss = await loadPostcss(options, asset.filePath);
     let ast = (0, _nullthrows().default)(await asset.getAST());
-    let program = postcss.fromJSON(ast.program);
+    let program = ast.program;
     let plugins = [...config.hydrated.plugins];
     let cssModules = null;
 
@@ -220,8 +220,8 @@ var _default = new (_plugin().Transformer)({
     } = await postcss(plugins).process(program, config.hydrated);
     asset.setAST({
       type: 'postcss',
-      version: '8.2.1',
-      program: root.toJSON()
+      version: '7.0.0',
+      program: root
     });
 
     for (let msg of messages) {
@@ -262,13 +262,13 @@ var _default = new (_plugin().Transformer)({
         ([className, classNameHashed]) => `module.exports[${JSON.stringify(className)}] = ${JSON.stringify(classNameHashed)};`).join('\n');
       }
 
-      asset.symbols.ensure();
+      // asset.symbols.ensure();
 
-      for (let [k, v] of cssModulesList) {
-        asset.symbols.set(k, v);
-      }
+      // for (let [k, v] of cssModulesList) {
+      //   asset.symbols.set(k, v);
+      // }
 
-      asset.symbols.set('default', 'default');
+      // asset.symbols.set('default', 'default');
       assets.push({
         type: 'js',
         content: code
@@ -285,7 +285,7 @@ var _default = new (_plugin().Transformer)({
   }) {
     const postcss = await loadPostcss(options, asset.filePath);
     let code = '';
-    postcss.stringify(postcss.fromJSON(ast.program), c => {
+    postcss.stringify(ast.program, c => {
       code += c;
     });
     return {
diff --git a/node_modules/@parcel/transformer-postcss/lib/constants.js b/node_modules/@parcel/transformer-postcss/lib/constants.js
index a16ee4c..995a367 100644
--- a/node_modules/@parcel/transformer-postcss/lib/constants.js
+++ b/node_modules/@parcel/transformer-postcss/lib/constants.js
@@ -4,5 +4,5 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.POSTCSS_RANGE = void 0;
-const POSTCSS_RANGE = '^8.2.1';
+const POSTCSS_RANGE = '^7.0.0';
 exports.POSTCSS_RANGE = POSTCSS_RANGE;
\ No newline at end of file
